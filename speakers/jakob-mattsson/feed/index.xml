<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Jakob Mattsson &#8211; jsDay 2014</title>
	<atom:link href="/speakers/jakob-mattsson/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>The international Javascript Conference</description>
	<lastBuildDate>Tue, 13 May 2014 21:24:59 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.2</generator>
	<item>
		<title>Promise to test it!</title>
		<link>/talk/promise-to-test-it/</link>
		<pubDate>Tue, 13 May 2014 21:24:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		
		<guid isPermaLink="false">/?post_type=talk&#038;p=348</guid>
		<description><![CDATA[Properly testing a stateful system &#8211; like a typical web api &#8211; is hard. Doing it in JavaScript is even harder, because semantics easily drown in callback hell. Most folks out there are starting to use promises to solve it, or at least imagining so. Unfortunately very few developers have understood how to leverage this [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><span style="color: #222222;">Properly testing a stateful system &#8211; like a typical web api &#8211; is hard. Doing it in JavaScript is even harder, because semantics easily drown in callback hell. Most folks out there are starting to use promises to solve it, or at least imagining so. Unfortunately very few developers have understood how to leverage this wizardy correctly. So let&#8217;s find out! This talk will explore the full power of promises, in the context of TDD, and reveal a few surprises too.</span></p>
]]></content:encoded>
			</item>
		<item>
		<title>Automated CSS-testing with JavaScript &#8211; Not just a myth</title>
		<link>/talk/automated-css-testing-with-javascript-not-just-a-myth/</link>
		<pubDate>Sun, 23 Mar 2014 18:53:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		
		<guid isPermaLink="false">/?post_type=talk&#038;p=285</guid>
		<description><![CDATA[You&#8217;re a developer. To you, &#8220;automation&#8221; is the most erotic word in the world. Removing manual overhead is one of the reasons you go up in the morning. You&#8217;re also a web developer. You want to create HTML and CSS that looks stunning, is responsive and works on all kinds of devices. You already have [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>You&#8217;re a developer. To you, &#8220;automation&#8221; is the most erotic word in the world. Removing manual overhead is one of the reasons you go up in the morning.</p>
<p>You&#8217;re also a web developer. You want to create HTML and CSS that looks stunning, is responsive and works on all kinds of devices.</p>
<p>You already have some kind of test suite for your code. But you still fire up half a dozen virtual machines and open your drawer with five different mobile devices in it to test that your site looks right. The level of automation in that is embarrassing.</p>
<p>Some people say that you can&#8217;t test HTML/CSS. I&#8217;d like to show you the opposite. You *can* automate testing visual layout. You *can* refactor your CSS with confidence. You *can* get rid of this pain.</p>
<p>You already understand why you would want to do this. Let&#8217;s talk about how.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

 Served from: 2014.jsday.it @ 2017-02-13 22:27:36 by W3 Total Cache -->